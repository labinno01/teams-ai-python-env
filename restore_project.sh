#!/bin/bash

# ==============================================================================
# Script de restauration du projet Git via SSH
#
# Ce script configure l'environnement pour cloner le d√©p√¥t Git en utilisant
# une cl√© SSH pour l'authentification.
# ==============================================================================

# --- Configuration ---
# L'URL SSH de votre d√©p√¥t. Changez-la si n√©cessaire.
GIT_REPO_URL="git@github.com:labinno01/teams-ai-python-env.git"

# Le nom du dossier o√π le projet sera clon√©.
DESTINATION_FOLDER="teams-ai-python-env-restored"

# Emplacement de la cl√© SSH par d√©faut.
SSH_KEY_PATH="$HOME/.ssh/id_rsa"
# --- Fin de la configuration ---


# √âtape 1: V√©rifier l'existence de la cl√© SSH.
echo "üîé V√©rification de l'existence d'une cl√© SSH sur cette machine..."

if [ ! -f "$SSH_KEY_PATH" ]; then
    # Si la cl√© n'existe pas, on la g√©n√®re.
    echo "‚ùå Cl√© SSH non trouv√©e. G√©n√©ration d'une nouvelle cl√©..."
    
    # Demander l'email de l'utilisateur pour l'associer √† la cl√©.
    read -p "Entrez votre email GitHub pour l'associer √† la cl√© : " user_email

    # G√©n√©ration de la cl√© sans phrase de passe pour une utilisation non-interactive.
    # C'est pratique pour les scripts, mais moins s√©curis√© qu'une cl√© avec phrase de passe.
    ssh-keygen -t rsa -b 4096 -f "$SSH_KEY_PATH" -N "" -C "$user_email"

    if [ $? -ne 0 ]; then
        echo "Erreur lors de la g√©n√©ration de la cl√© SSH. Le script ne peut pas continuer."
        exit 1
    fi
    echo "‚úÖ Nouvelle cl√© SSH g√©n√©r√©e avec succ√®s."
else
    echo "‚úÖ Cl√© SSH existante trouv√©e : $SSH_KEY_PATH"
fi

# √âtape 2: Afficher la cl√© publique et les instructions pour l'utilisateur.
echo ""
echo "============================= ACTION REQUISE ============================="
echo "Pour que Git puisse s'authentifier, vous devez ajouter la cl√© SSH publique"
echo "suivante √† votre compte GitHub."
echo ""
echo "1. Allez √† l'adresse suivante dans votre navigateur :"
echo "   https://github.com/settings/keys"
echo ""
echo "2. Cliquez sur 'New SSH key'."
echo "3. Donnez-lui un titre (ex: 'Ma Nouvelle Machine')."
echo "4. Copiez l'int√©gralit√© du texte ci-dessous (commen√ßant par 'ssh-rsa') et"
echo "   collez-le dans le champ 'Key'."
echo "--------------------------------------------------------------------------"
cat "${SSH_KEY_PATH}.pub"
echo "--------------------------------------------------------------------------"
echo ""
read -p "Appuyez sur [Entr√©e] une fois que la cl√© a √©t√© ajout√©e √† GitHub..."
echo "=========================================================================="
echo ""


# √âtape 3: Cloner le d√©p√¥t.
echo "üöÄ Tentative de clonage du d√©p√¥t : $GIT_REPO_URL..."
git clone "$GIT_REPO_URL" "$DESTINATION_FOLDER"

if [ $? -eq 0 ]; then
  echo "‚úÖ Le d√©p√¥t a √©t√© clon√© avec succ√®s dans le dossier : $DESTINATION_FOLDER"
else
  echo "‚ùå Une erreur est survenue lors du clonage."
  echo "   V√©rifiez que vous avez bien ajout√© la cl√© SSH √† votre compte GitHub."
  echo "   Il peut y avoir un d√©lai de quelques instants avant qu'elle ne soit active."
fi
